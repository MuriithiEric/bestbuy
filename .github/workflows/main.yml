name: CI

on:
  push:
    branches:
      - main

jobs:
  test:
    runs-on: ubuntu-latest
    services:
      db:
        image: postgres
        env:
          POSTGRES_DB: staples
          POSTGRES_USER: ken
          POSTGRES_PASSWORD: invincible
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432
    env:
      AFRICAS_TALKING_APIKEY: ${{ secrets.AFRICAS_TALKING_APIKEY }}
      AFRICAS_TALKING_USERNAME: ${{ secrets.AFRICAS_TALKING_USERNAME }}
      DATABASE_HOST: ${{ secrets.DATABASE_HOST }} 
    steps:
    - uses: actions/checkout@v2
    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: '3.10'
    - name: Install dependencies
      run: |
        cd cleanstore
        pip install -r requirements.txt
    - name: Wait for PostgreSQL
      run: |
        until pg_isready -h localhost -p 5432; do
          echo "Waiting for PostgreSQL to become ready..."
          sleep 2
        done
    - name: Run Django migrations
      run: |
        cd cleanstore
        python manage.py migrate
    - name: Run tests
      run: |
        cd cleanstore
        python manage.py test

  build-and-push-docker:
    needs: test
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Log in to Docker Hub
      uses: docker/login-action@v1
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_PASSWORD }}
    - name: Build and push Docker images using Docker Compose
      env:
        DJANGO_SETTINGS_MODULE: cleanstore.settings.development
      run: |
        cd cleanstore
        docker compose -f docker-compose.yml build web nginx
        docker compose -f docker-compose.yml push web nginx
