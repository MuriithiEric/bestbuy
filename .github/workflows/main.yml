name: Django CI/CD

on:
  push:
    branches:
      - main

jobs:
  test:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: '3.10'

    - name: Set up environment variables
      run: |
        echo "AFRICAS_TALKING_USERNAME=sandbox" >> $GITHUB_ENV
        echo "AFRICAS_TALKING_APIKEY=1192b655e4f18289edcffe3d714440b75f22323c663cedbc0519871c3e1bdf30" >> $GITHUB_ENV

    - name: Install dependencies
      run: |
        pip install --upgrade pip
        pip install -r cleanstore/requirements.txt

    - name: Run tests
      run: |
        python cleanstore/manage.py test

    - name: Apply migrations
      run: |
        python cleanstore/manage.py migrate

    - name: Collect static files
      run: |
        python cleanstore/manage.py collectstatic --noinput

  dockerize:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Set up Docker
      uses: actions/setup-docker@v2

    - name: Build and push Docker images
      run: |
        cd cleanstore
        docker compose build
        docker compose push

  deploy:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Set up AWS Elastic Beanstalk
      uses: aws-actions/configure-aws-credentials@v2
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: us-east-2

    - name: Install Elastic Beanstalk CLI
      run: |
        pip install awsebcli

    - name: Deploy to Elastic Beanstalk
      run: |
        cd cleanstore
        eb create clean
        eb deploy

    - name: Get Elastic Beanstalk URL
      run: |
        EB_URL=$(eb status --verbose | grep CNAME | awk '{print $2}')
        echo "Live System URL: $EB_URL"
