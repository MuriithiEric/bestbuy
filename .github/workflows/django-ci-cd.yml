name: Django CI/CD Pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build-test-deploy:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.10'

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_PASSWORD }} # or DOCKER_ACCESS_TOKEN if you use an access token

      - name: Build and push Docker image
        uses: docker/build-push-action@v2
        with:
          context: .
          file: ./cleanstore/Dockerfile
          push: true
          tags: ki3ani/cleanstore:latest

      - name: Create .env file
        run: |
          echo "DJANGO_SECRET_KEY=${{ secrets.DJANGO_SECRET_KEY }}" >> .env
          echo "GOOGLE_CLIENT_ID=${{ secrets.GOOGLE_CLIENT_ID }}" >> .env
          echo "GOOGLE_SECRET=${{ secrets.GOOGLE_SECRET }}" >> .env
          echo "DATABASE_URL=${{ secrets.DATABASE_URL }}" >> .env
          echo "AFRICAS_TALKING_USERNAME=${{ secrets.AFRICAS_TALKING_USERNAME }}" >> .env
          echo "AFRICAS_TALKING_APIKEY=${{ secrets.AFRICAS_TALKING_APIKEY }}" >> .env

      - name: Run Docker Container
        run: docker compose -f docker-compose.yml up -d

      - name: Run Migrations
        run: docker compose -f docker-compose.yml run web python manage.py migrate

      - name: Collect Static Files
        run: docker compose -f docker-compose.yml run web python manage.py collectstatic --noinput

      - name: Run Tests
        run: docker compose -f docker-compose.yml run web python manage.py test

  deploy-to-railway:
    needs: build-test-deploy
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'

    steps:
      - uses: actions/checkout@v2
      
      - name: Install Railway CLI
        run: npm install -g railway

      - name: Login to Railway
        run: railway login --apiKey ${{ secrets.RAILWAY_API_KEY }}
      
      - name: Deploy to Railway
        run: railway up
        env:
          RAILWAY_PROJECT: pithy-sky
          RAILWAY_ENVIRONMENT: production
